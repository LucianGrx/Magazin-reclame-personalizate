/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.12 public/models/chair.gltf
*/

import React, { useRef, useEffect } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { useCustomization } from "./contexts/Customization";
import { useFrame } from '@react-three/fiber';

const Chair = (props) => {

  const {material, legs, primarColor, secondColor} = useCustomization()

  const { nodes, materials } = useGLTF("../models/litere.gltf");

  const plasticTextureProps = useTexture({
    // map: "../textures/leather/Leather_008_Base Color.jpg",
    normalMap: "../textures/leather/Leather_008_Normal.jpg",
    roughnessMap: "../textures/leather/Leather_008_Roughness.jpg",
    aoMap: "../textures/leather/Leather_008_Ambient Occlusion.jpg",
  });

  const metalTextureProps = useTexture({
    // map: "../textures/fabric/Fabric_Knitted_006_basecolor.jpg",
    normalMap: "../textures/fabric/Fabric_Knitted_006_normal.jpg",
    roughnessMap: "../textures/fabric/Fabric_Knitted_006_roughness.jpg",
    aoMap: "../textures/fabric/Fabric_Knitted_006_ambientOcclusion.jpg",
  });

  const mesh = useRef();
  useEffect(() => {
    if (mesh.current) {
      // Rotirea modelului cu 90 de grade în jurul axei Y
      mesh.current.rotation.x = 1.6;
      mesh.current.rotation.y = 3.1;
      mesh.current.rotation.z = 3.2; // π/2 radiani = 90 de grade
    }
  }, []);



  return (
    <group {...props} dispose={null}>
      
      <mesh geometry={nodes.Chair.geometry}
      scale={0.03}
      ref={mesh}>
        
        <meshStandardMaterial {...material === 'plastic' ? plasticTextureProps : metalTextureProps} 
        color={primarColor.color}
        />
      </mesh>
      {/* <mesh
        geometry={nodes.Cushion.geometry}
        material={materials.Cushion}
        position={[0, 0.06, 0.04]}
      >
         <meshStandardMaterial {...metalTextureProps} 
         color={secondColor.color}
         />
      </mesh>
      <mesh geometry={nodes.Legs1.geometry} material={materials.Legs} visible={legs === 1}/>
      <mesh
        geometry={nodes.Legs2.geometry}
        material={materials.Legs}
        visible={legs === 2}
      /> */}
    </group>
  );
};

useGLTF.preload("../models/litere.gltf");
export default Chair;
